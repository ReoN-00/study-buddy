// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // for local development
  // url      = env("DATABASE_URL")
  // for Vercel
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

enum Role {
  USER
  ADMIN
}

model User {
  id           Int            @id @default(autoincrement())
  email        String         @unique
  password     String
  role         Role           @default(USER)
  profile      Profile?
  mySessions   StudySession[] @relation("mySessions")
  myBuddies    Buddy[]        @relation("UserBuddies")
  //public sessions all sessions:
  StudySession StudySession[]
  //public buddies all buddies:
  buddy        Buddy[]
}

model Profile {
  id            Int         @id @default(autoincrement())
  firstName     String
  lastName      String
  userId        Int         @unique
  user          User        @relation(fields: [userId], references: [id])
  major         String
  social        String
  bio           String
  collegeRole   CollegeRole
  profilePicUrl String
}

model Buddy {
  id       Int    @id @default(autoincrement())
  users    User[] @relation("UserBuddies")
  // uses userId of buddy
  buddyId  Int    @unique
  userDupe User?  @relation(fields: [buddyId], references: [id])
}

enum CollegeRole {
  TA
  LA
  Student
}

model StudySession {
  id          Int      @id @default(autoincrement())
  title       String   @unique
  // requested Boolean @default(false)
  // accepted  Boolean @default(false)
  userId      Int
  owner       User     @relation(fields: [userId], references: [id])
  users       User[]   @relation("mySessions")
  description String
  class       String
  place       String
  sessionDate DateTime
  startTime   DateTime
  endTime     DateTime
  image       String
}

enum Condition {
  excellent
  good
  fair
  poor
}

model Stuff {
  id        Int       @id @default(autoincrement())
  name      String
  quantity  Int
  condition Condition
  owner     String
}
